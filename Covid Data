SELECT *
FROM CovidDeaths
WHERE continent is NOT NULL
ORDER BY 3,4

--SELECT *
--FROM CovidVaccinations
--ORDER BY 3,4



-- Select Data that we are going to be using

SELECT
	location,
	date,
	total_cases,
	new_cases,
	total_deaths,
	population
FROM
	CovidDeaths
ORDER BY 1,2



--Looking at Total Case vs Total Deaths
--Shows the likelihood of dying if you contract covid in your country

SELECT
	location,
	date,
	total_cases,
	total_deaths,
	(total_deaths/total_cases)*100 AS DeathPercentage
FROM
	CovidDeaths
where
	location LIKE '%states%'
ORDER BY 1,2



--Looking at the Total Case vs Population

SELECT
	location,
	date,
	total_cases,
	population,
	(total_cases/population)*100 AS DeathPercentage
FROM
	CovidDeaths
WHERE
	location LIKE '%states%'
ORDER BY 1,2



--Looking at countries with highest infection rate= compared to population

SELECT
	location,
	MAX(total_cases) AS HighestInfectionCount,
	population,
	MAX((total_cases/population))*100 AS PercentOfPopulationInfected
FROM
	CovidDeaths
--WHERE location LIKE '%states%'
GROUP BY Location, Population
ORDER BY PercentOfPopulationInfected DESC



--Showing Countries with Highest Death Count per Population

SELECT
	location,
	MAX(cast(Total_Deaths as int)) AS TotalDeathCount
FROM
	CovidDeaths
WHERE continent is NOT NULL
GROUP BY Location
ORDER BY TotalDeathCount DESC


--Disecting by Continent - Death Count

SELECT
	continent,
	MAX(cast(Total_Deaths as int)) AS TotalDeathCount
FROM
	CovidDeaths
--WHERE location LIKE '%states%'
WHERE continent is NOT NULL
GROUP BY continent
ORDER BY TotalDeathCount DESC




--Global Numbers

SELECT
	date,
	SUM(new_cases) as TotalCases,
	SUM(cast(new_deaths as int)) as TotalDeaths,
	SUM(cast(new_deaths as int))/SUM(new_cases)*100 AS DeathPercentage
FROM
	CovidDeaths
WHERE continent is NOT NULL
GROUP BY date
ORDER BY 1,2


SELECT
	SUM(new_cases) as TotalCases,
	SUM(cast(new_deaths as int)) as TotalDeaths,
	SUM(cast(new_deaths as int))/SUM(new_cases)*100 AS DeathPercentage
FROM
	CovidDeaths
WHERE continent is NOT NULL
--GROUP BY date
ORDER BY 1,2



--Total Population vs Vaccinations

SELECT 
dea.continent,
dea.location,
dea.population,
dea.date,
vacc.new_vaccinations,
SUM(cast(vacc.new_vaccinations as int)) OVER (Partition by dea.location Order by dea.location, dea.date) AS RollingVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vacc
	ON dea.location = vacc.location
	AND dea.date = vacc.date
WHERE dea.continent is NOT NULL
ORDER by 2,3



--CTE

With PopvsVac (Continent, Location, Population, Date, New_vaccinations, RollingVaccinated)
as
(
SELECT 
dea.continent,
dea.location,
dea.population,
dea.date,
vacc.new_vaccinations,
SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by dea.location Order by dea.location, dea.date) as RollingVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vacc
	ON dea.location = vacc.location
	AND dea.date = vacc.date
WHERE dea.continent is NOT NULL
)
SELECT *, (RollingVaccinated/Population)*100
FROM PopvsVac



--Temp Table

DROP TABLE IF EXISTS #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
SELECT 
dea.continent,
dea.location,
dea.date,
dea.population,
vacc.new_vaccinations,
SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by dea.location Order by dea.location, dea.date) as RollingPeopleVaccinated
FROM CovidDeaths dea
JOIN CovidVaccinations vacc
	ON dea.location = vacc.location
	AND dea.date = vacc.date
WHERE dea.continent is NOT NULL

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated



-- Creating View to store data

Create View PercentPopulationVaccinated as
SELECT
dea.continent,
dea.location,
dea.date,
dea.population,
vacc.new_vaccinations
, SUM(CONVERT(int,vacc.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From CovidDeaths dea
Join CovidVaccinations vacc
	On dea.location = vacc.location
	and dea.date = vacc.date
where dea.continent is not nullÂ 
